# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]

import math
data = [2, -5, 8, 9, -25, 25, 4]
data_new=[]
for i in data:
    if i >= 0 and math.sqrt(i)==int(math.sqrt(i)):
        i=int(math.sqrt(i))
        data_new.append(i)
    else:
        pass
print(data)
print(data_new)

# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)
#days = ["01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31"]
#mm = []
#print (ddr[0])
print(" ")

dd = {"01": "первое",
      "02": "второе",
      "03": "третье",
      "04": "четвертое",
      "05": "пятое",
      "06": "шестое",
      "07": "седьмое",
      "08": "восьмое",
      "09": "девятое",
      "10": "десятое",
      "11": "одиннадцатое",
      "12": "двеннадцатое",
      "13": "тринадцатое",
      "14": "четырнадцатое",
      "15": "пятнадцатое",
      "16": "шестнадцатое",
      "17": "семнадцатое",
      "18": "восемнадцатое",
      "19": "девятнадцать",
      "20": "двадцатое",
      "21": "двацать первое",
      "22": "двадцать второе",
      "23": "двадцать третье",
      "24": "двадцать четвертое",
      "25": "двадцать пятое",
      "26": "двадцать шестое",
      "27": "двадцать седьмое",
      "28": "двадцать восьмое",
      "29": "двадцать девятое",
      "30": "тридцатое",
      "31": "тридцать первое",
      }

mm = {"01": "января",
      "02": "февраля",
      "03": "марта",
      "04": "апреля",
      "05": "мая",
      "06": "июня",
      "07": "июля",
      "08": "августа",
      "09": "сентября",
      "10": "октября",
      "11": "ноября",
      "12": "декабря",
      }

leap_years = (list(range(0, 10000, 4)))
date = input("Введите дату в формате dd.mm.yyyy: ")
print("dd = ", date[:2])
print("mm = ", date[3:5])
print("yyyy = ", date[-4:])

if int(date[:2]) > 31 or int(date[3:5]) > 12 :
    print("Такой даты не существует")
elif (date[3:5]) == "04" and int(date[:2]) > 30:
    print("Такой даты не существует")
elif (date[3:5]) == "06" and int(date[:2]) > 30:
    print("Такой даты не существует")
elif (date[3:5]) == "09" and int(date[:2]) > 30:
    print("Такой даты не существует")
elif (date[3:5]) == "11" and int(date[:2]) > 30:
    print("Такой даты не существует")
elif int(date[-4:]) in leap_years:
    if (date[3:5]) == "02" and int(date[:2]) == 29:
        print("29 февраля високосного", (date[-4:]), "года")
    else:
        print(dd[date[:2]], mm[date[3:5]], date[-4:], "года")
elif (date[3:5]) =="02" and int(date[:2]) > 28:
    print ("Такой даты не существует")
# elif int(date[-4:]) not leap_years and (date[3:5])=="02" and int(date[:2]) == 29:
#	print ("Такой даты не существует")
else:
    print(dd[date[:2]], mm[date[3:5]], date[-4:], "года")

# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

print(" ")
import random
spisok = []
n = int(input ("Введите количество элементов списка "))
k = 0
while k<n:
	a=random.randint(-100,100)
	#print (a)
	spisok.append(a)
	k=k+1
print(spisok)

# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут: 
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

print(" ")
dim=[1,2,3,13,7,45,9,0,1,3,31]
dim_new_a =[]
dim_new_b =[]
for i in dim:
    if dim.count(i)==1:
        dim_new_b.append(i)
        dim_new_a.append(i)
#        print (i)
    elif dim.count(i)>1:
        if i in dim_new_a:
            pass
        else:
            dim_new_a.append(i)
    else:
        pass
#        dim.append(i)
print (dim)
print (dim_new_a)
print (dim_new_b)







